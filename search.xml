<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[初识JavaScript之JavaScript历史]]></title>
    <url>%2F2018%2F08%2F08%2F%E5%88%9D%E8%AF%86JavaScript%E4%B9%8BJavaScript%E5%8E%86%E5%8F%B2%2F</url>
    <content type="text"><![CDATA[JavaScript历史1.浏览器发展史：1993年，出现互联网历史上第一个普遍使用和能够显示图片的网页浏览器Mosaic。1994年4月，马克.安德森和Silicon Graphics（简称为SGI，中译为“视算科技”或“硅图”）公司的创始人吉姆·克拉克（Jim Clark）在美国加州设立了“Mosaic Communication Corporation”。Mosaic公司成立后，由于伊利诺伊大学拥有Mosaic的商标权，且伊利诺伊大学已将技术转让给Spy Glass公司，开发团队必须彻底重新撰写浏览器程式码，且浏览器名称更改为Netscape Navigator，公司名字于1994年11月改名为“Netscape Communication Corporation”，此后沿用至今，中译为“网景”。微软的Internet Explorer及Mozilla Firefox等，其早期版本皆以Mosaic为基础而开发。微软随后买下Spy Glass公司的技术开发出Internet Explorer浏览器，而Mozilla Firefox则是网景通讯家开放源代码后所衍生出的版本。 2.JavaScript历史：1996年，JavaScript作为Netscape Navigator浏览器的一部分首次出现。它最初的设计目标是改善网页的用户体验。JavaScript作者：Brendan Eich （Java之父：比尔乔伊）起初JavaScript被命名为，LiveScript，后因和Sun公司合作，因市场宣传需要改名JavaScript。后来Sun公司被Oracle收购，JavaScript版权归Oracle所有。 3.浏览器的组成:外壳（shell）和内核。内核又分为渲染引擎，js引擎以及其他部分，以下介绍js引擎：2001年发布ie6，首次实现对js引擎的优化。2008年Google发布最新浏览器Chrome，它是采用优化后的javascript引擎，引擎代号V8，因能把js代码直接转化为机械码来执行，进而以速度快而闻名。后Firefox也推出了具备强大功能的js引擎Firefox3.5 TraceMonkey（对频繁执行的代码做了路径优化）Firefox4.0 JeagerMonkey 4.js语言的特点：（1）解释性语言（弱数据类型语言）：翻译一行执行一行。能够跨平台，但是慢（PHP，phthon，JavaScript）编译性语言特点：通篇翻译完之后生成一个文件再执行。很难跨平台执行，但是快。（c，c++）Java是弥补c和c++而出现，先通过javac编译成.class 文件，再通过jvm虚拟机解释执行，所以能够跨平台。（先编译后解释）（2）单线程，同一时间只干一件事儿。轮转时间片：让单线程执行的视觉效果像多线程。切割任务片段，不断往js引擎里送，两个任务还会争抢时间片。（3）ECMA（欧洲计算机联盟）标注：为了获取技术优势，微软推出JScript，CEnvi推出scriptEase，与JavaScript同样可以在浏览器上运行，为了统一规格JavaScript兼容于ECMA标准，因此也称为ECMAscript。 5，JavaScript语言的三大部分 ：ECMAscript，DOM（操作css和HTML），BOM（操作浏览器）。6，JavaScript的引入：（建议用外部引用，因为web标准：结构，样式，行为相分离）（1），页面级JavaScript,标签最优存在的位置body的最下边儿&lt;script type = &quot;text/javascript&quot;&gt;&lt;/script&gt;（2），外部JavaScript引用&lt;script type = &quot;text/javascript&quot; src = &quot;js文件地址&quot;&gt;&lt;/script&gt;js无论以何种方式引用，当读到js标签时，阻塞其他加载项，先加载js，完了之后再加载其他项，所以js文件的最优出生位置为body的最下边儿。 7，变量（variable）：（1）变量声明：var ，声明变量，向系统要一个内存空间，以var后面的值作为内存空间的名字，以便于后面的操作。用等号往内存空间赋值。var a = 123；声明变量a，将123赋值给a。（2）变量名的命名规则：变量名必须与字母 ，’_’，$字符开头；变量名可以包括字母，下划线，$，数字；不可以用系统的关键字和保留字作为变量名。 8，数据类型：（1）原始值（栈数据stack）：数字类型（number），字符串（string），布尔值（Boolean：true/false），undefined（undefined：未定义），null（null：空占位）。（2）引用值（堆数据heap）：数组（array），对象（object），函数（function）。（3）不可改变的原始值：栈数据在改变变量的值的时候，将变量声明的内存空间名还原，再次申请一个内存空间，空间名与以前相同，将值存入，以前的值依然存在于之前的内存空间中。引用值在赋值时，在栈数据结构里申请内存空间，命名a，值为堆数据里的内存空间名。堆数据的内存空间里存引用值的值，相互配合给引用值赋值。假如再声明一个变量b的时候，将a的值赋给b，此时赋的是堆数据的内存空间名。改变堆数据里的数据，则b也改变。 9，JavaScript语句的基本规则：（1）语句后面要以分号结束“；”。（2）js语法错误会引发后续代码终止，但不会影响其他js模块（3）书写规范，运算符两边都要有空格。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>-分享 -导航</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML]]></title>
    <url>%2F2018%2F08%2F06%2Fhtml%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[HTML前端总结 HTML hyperText markup language 超文本链接语言 根标签分头标签和尾标签 eg:&lt;html&gt;&lt;/html&gt; head标签设置给浏览器看的，body标签设置给用户看的。 属性分为属性名和属性值，只能设置在头标签上。 charset属性：①gb2312：国标2312，识别中文，亚洲文字，不包括繁体中文②gbk：国家标准扩展版本，识别繁体中文③Unicode：万国码 utf-8也是万国码。Unicode Transformation Format 8比特 &lt;html lang = &quot;en&quot;&gt;告诉搜索引擎爬虫，网站关于什么内容。SEO 搜索引擎优化 meta标签：head区的一个辅助性标签。一共有两个属性，包括name属性和http-equiv属性，不同的属性有不同的属性值，这些属性值实现了不同的网页功能。以下详细介绍一下两种属性：①name属性：name属性主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。 1234&lt;meta name = &quot;keywords&quot; content = &quot;science,education,culture&quot;&gt; //告诉搜索引擎你网页的关键字是什么&lt;meta name = &quot;description&quot; content = &quot;miaoshuneirong&quot;&gt;//网站描述内容&lt;meta name = &quot;robots&quot; content = &quot;&quot;&gt; //机器人向导，告诉搜索机器人哪些页面需要索引&lt;meta name = &quot;author&quot; content = &quot;&quot;&gt; //作者，标注网页的作者 ②http-equiv属性：顾名思义就是相当于http文件头的作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确的显示网页内容。1234567&lt;meta http-equiv = &quot;Expires&quot; content = &quot;&quot;&gt; //用于设定网页的到期时间，一旦网页过期，必须到服务器上重新传输&lt;meta http-equiv = &quot;Pragma&quot; content = &quot;&quot;&gt; //禁止浏览器从本地计算机的缓存中访问页面内容&lt;meta http-equiv = &quot;Refresh&quot; content = &quot;&quot;&gt; //自动刷新并指向新的页面&lt;meta http-equiv = &quot;Set-Cookie&quot; content = &quot;&quot;&gt; //如果网页过期，那么存盘中的cookie将被删除&lt;meta http-equiv = &quot;Window-target&quot; content = &quot;&quot;&gt; //显示窗口的设定，强制页面在当前窗口以独立页面显示，用来防止别人在框架中调用自己的页面&lt;meta http-equiv = &quot;content-type&quot; content = &quot;&quot;&gt;//设定页面显示的字符集&lt;meta http-equiv = &quot;Cache-Control&quot; content = &quot;&quot;&gt; //指定请求和响应遵循的缓存机制。 Cache-Control指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括no-cache、no-store、max-age、max-stale、min-fresh、only-if-cached，响应消息中的指令包括public、private、no-cache、no-store、no-transform、must-revalidate、proxy-revalidate、max-age。各个消息中的指令含义如下Public指示响应可被任何缓存区缓存Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效no-cache指示请求或响应消息不能缓存no-store用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。 title标签，在head标签里面，修改网页页脚标的文字，logo无法本地添加，挂载服务器时传的图片。 文字分割符：空格和回车，HTML空格编码：&amp;nbsp；，小于编码&amp;lt；，大于编码&amp;gt；。 body区标签：①p， 段落标签，成段展示，里边儿文本成段展示。②h1~h6，字体从大到小，设计字体的大小，独占一行成段展示，标题标签，加粗文字。③strong，加粗文字 em，斜体④address，独占一行，斜体文字，（不常用）⑤i，斜体文字 b，加粗文本 老功能⑥del，文本加横杠，开发中不允许使用，因为下划线既有结构也有样式，css语言中设置text-decoration的值为line-through和上面的能达到一样的功能⑦div，span，重要标签，独占一行，对每个部分进行分类，结构化，功能化，集体操作。div和span的区别:This is crazy，当crazy的字体样式与其他不同时，div套所有文本，而有独特样式crazy可以用span套，设置独特的样式。span是内联的。section标签和div标签相似。⑧br，换行展示a&lt;br&gt;ba和b换换行展示。单标签，自己代表一定功能，不包裹内容⑨hr，水平线⑩ol-li 有序列表，ol上有type属性，值有1（默认），a/A，i/I，排序类型。 reversed属性，值有reversed，逆序排列；start属性，值为数字，从第几个开始排序。ul-li 无序列表 （unorder list ,list item)； 用在：大功能块儿里有很多功能子项。子项除内容不同，样式功能相同。 ①图片引用标签&lt;img src = &quot;&quot; alt = &quot;&quot; title = &quot;&quot;&gt;src后面填图片地址（a，网上的URL，网址链接；b，相对路径，存储地址一样，在同一文件夹下； 绝对路径，整个地址，后两种是本地引用图片）。alt后填写图片的相关描述，当图片无法展示的时候，展示图片的描述内容，图片占位符 title后填写图片提示符（鼠标移动到图片上，显示的内容）②链接标签及其作用&lt;a href = &quot;&quot;&gt;给用户看&lt;/a&gt;href:hyperText reference超文本引用，填目标网站地址，后还有target属性，设置_blank，则点击a标签跳转时空白页打开网址。默认当前页进行跳转。（a）a标签用作锚点用，填写跳转位置的ID值（只能是ID值） 例如：一键置顶。（b）当href值为tel：12345436565；挂载在移动端可以实现点击打电话的功能。当href值为mailto：邮箱地址；点击调用邮件系统，实现发邮件（c）协议限定符：填写javascript：while(1){alert（’陷入死循环’) }&lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;js_method()&quot;&gt;&lt;/a&gt;onclick方法负责执行js函数，而void是一个操作符，void(0)返回undefined，地址不发生跳转&lt;a href=&quot;javascript:;&quot; onclick=&quot;js_method()&quot;&gt;&lt;/a&gt;这种方法跟跟上一种类似，区别只是执行了一条空的js代码&lt;a href=&quot;#&quot; onclick=&quot;js_method();return false;&quot;&gt;&lt;/a&gt;点击执行了js函数后return false，页面不发生跳转，执行后还是在页面的当前位置。③表格标签，三层嵌套关系&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table border = &quot;1px&quot; cellpadding = &quot;1px&quot; cellspacing = &quot;1px&quot;&gt;加border展示表格，cellpadding内边距，cellspacing 外边距。td标签中的设置colspan= “3”align = “center”代表独占三列，文字居中。现在很少使用table标签：网页依赖于浏览器执行，服务器访问HTML到本地进行执行（下载过程中，符合最优最快原则）下载一部分执行一部分，而table标签必须将里边的内容下载完成才能执行（体验效果不好）。④form表单，将前端的请求发送到后台，发送数据必须有数据名和数据值12345&lt;form method = &quot;get&quot; action = &quot;发送对象，后台网址&quot;&gt;username：&lt;input type = &quot;text&quot; name = &quot;username&quot;&gt; //name就是数据名，输入的是数据值password：&lt;input type = &quot;password&quot; name = &quot;password&quot;&gt;&lt;input type = &quot;submit&quot;&gt; //提交按钮&lt;/form&gt; 以上代码的实现效果：登录框，扣扣登录框等；⑤input标签：12345&lt;input type = &quot;radio&quot;&gt; //单选框，但不设置相同的name值得话，浏览器无法识别那几个选择框为一道题，则会有多选的效果&lt;input type = &quot;radio&quot; name = &quot;aaa&quot; value = &quot;bbb&quot;&gt; //数据名是aaa，数据值是bbb，此时才能提交。&lt;input type = &quot;checkbox&quot; name = &quot;&quot; value = &quot;&quot;&gt; //复选框。&lt;input type = &quot;radio&quot; name = &quot;&quot; value = &quot;&quot; checked = &quot;checked&quot;&gt;//设置哪个为默认选项，checked属性设置在哪个input标签上，哪个就成为默认选项。&lt;input type = &quot;text&quot; name = &quot;&quot; value = &quot;请输入用户名&quot;&gt; //输入框的提示内容。 重要的输入框：&lt;input type = &quot;text&quot; name = &quot;username&quot; style = &quot;color:#999&quot; value = &quot;请输入用户名&quot; onfocus = &quot;if(this.value == &#39;请输入用户名&#39;){this.value = &#39;&#39;;this.style.color = &#39;#424242&#39;}&quot;onblur = &quot;if(this.value ==&#39;&#39;){this.value = &#39;请输入用户名’;this.style.color = &#39;#999&#39;}&quot;&gt;]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>导航</tag>
      </tags>
  </entry>
</search>
